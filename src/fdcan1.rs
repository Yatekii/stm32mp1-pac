#[doc = r"Register block"]
#[repr(C)]
pub struct RegisterBlock {
    #[doc = "0x00 - FDCAN Core Release Register"]
    pub fdcan_crel: FDCAN_CREL,
    #[doc = "0x04 - FDCAN Core Release Register"]
    pub fdcan_endn: FDCAN_ENDN,
    _reserved2: [u8; 4usize],
    #[doc = "0x0c - This register is only writable if bits CCCR.CCE and CCCR.INIT are set. The CAN bit time may be programed in the range of 4 to 25 time quanta. The CAN time quantum may be programmed in the range of 1 to 1024 FDCAN clock periods. tq = (DBRP + 1) FDCAN clock period. DTSEG1 is the sum of Prop_Seg and Phase_Seg1. DTSEG2 is Phase_Seg2. Therefore the length of the bit time is (programmed values) \\[DTSEG1 + DTSEG2 + 3\\]
tq or (functional values) \\[Sync_Seg + Prop_Seg + Phase_Seg1 + Phase_Seg2\\]
tq. The Information Processing Time (IPT) is zero, meaning the data for the next bit is available at the first clock edge after the sample point."]
    pub fdcan_dbtp: FDCAN_DBTP,
    #[doc = "0x10 - Write access to the Test Register has to be enabled by setting bit CCCR\\[TEST\\]
to 1 . All Test Register functions are set to their reset values when bit CCCR\\[TEST\\]
is reset. Loop Back mode and software control of Tx pin FDCANx_TX are hardware test modes. Programming TX differently from 00 may disturb the message transfer on the CAN bus."]
    pub fdcan_test: FDCAN_TEST,
    #[doc = "0x14 - The RAM Watchdog monitors the READY output of the Message RAM. A Message RAM access starts the Message RAM Watchdog Counter with the value configured by the RWD\\[WDC\\]
bits. The counter is reloaded with RWD\\[WDC\\]
bits when the Message RAM signals successful completion by activating its READY output. In case there is no response from the Message RAM until the counter has counted down to 0, the counter stops and interrupt flag IR\\[WDI\\]
bit is set. The RAM Watchdog Counter is clocked by the fdcan_pclk clock."]
    pub fdcan_rwd: FDCAN_RWD,
    #[doc = "0x18 - For details about setting and resetting of single bits see Software initialization."]
    pub fdcan_cccr: FDCAN_CCCR,
    #[doc = "0x1c - FDCAN_NBTP"]
    pub fdcan_nbtp: FDCAN_NBTP,
    #[doc = "0x20 - FDCAN Timestamp Counter Configuration Register"]
    pub fdcan_tscc: FDCAN_TSCC,
    #[doc = "0x24 - FDCAN Timestamp Counter Value Register"]
    pub fdcan_tscv: FDCAN_TSCV,
    #[doc = "0x28 - FDCAN Timeout Counter Configuration Register"]
    pub fdcan_tocc: FDCAN_TOCC,
    #[doc = "0x2c - FDCAN Timeout Counter Value Register"]
    pub fdcan_tocv: FDCAN_TOCV,
    _reserved11: [u8; 16usize],
    #[doc = "0x40 - FDCAN Error Counter Register"]
    pub fdcan_ecr: FDCAN_ECR,
    #[doc = "0x44 - FDCAN Protocol Status Register"]
    pub fdcan_psr: FDCAN_PSR,
    #[doc = "0x48 - FDCAN Transmitter Delay Compensation Register"]
    pub fdcan_tdcr: FDCAN_TDCR,
    _reserved14: [u8; 4usize],
    #[doc = "0x50 - The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of IE controls whether an interrupt is generated. The configuration of ILS controls on which interrupt line an interrupt is signaled."]
    pub fdcan_ir: FDCAN_IR,
    #[doc = "0x54 - The settings in the Interrupt Enable register determine which status changes in the Interrupt Register will be signaled on an interrupt line."]
    pub fdcan_ie: FDCAN_IE,
    #[doc = "0x58 - The Interrupt Line Select register assigns an interrupt generated by a specific interrupt flag from the Interrupt Register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via ILE\\[EINT0\\]
and ILE\\[EINT1\\]."]
    pub fdcan_ils: FDCAN_ILS,
    #[doc = "0x5c - Each of the two interrupt lines to the CPU can be enabled/disabled separately by programming bits EINT0 and EINT1."]
    pub fdcan_ile: FDCAN_ILE,
    _reserved18: [u8; 32usize],
    #[doc = "0x80 - Global settings for Message ID filtering. The Global Filter Configuration controls the filter path for standard and extended messages as described in Figure706: Standard Message ID filter path and Figure707: Extended Message ID filter path."]
    pub fdcan_gfc: FDCAN_GFC,
    #[doc = "0x84 - Settings for 11-bit standard Message ID filtering.The Standard ID Filter Configuration controls the filter path for standard messages as described in Figure706: Standard Message ID filter path."]
    pub fdcan_sidfc: FDCAN_SIDFC,
    #[doc = "0x88 - Settings for 29-bit extended Message ID filtering. The Extended ID Filter Configuration controls the filter path for standard messages as described in Figure707: Extended Message ID filter path."]
    pub fdcan_xidfc: FDCAN_XIDFC,
    _reserved21: [u8; 4usize],
    #[doc = "0x90 - FDCAN Extended ID and Mask Register"]
    pub fdcan_xidam: FDCAN_XIDAM,
    #[doc = "0x94 - This register is updated every time a Message ID filter element configured to generate a priority event match. This can be used to monitor the status of incoming high priority messages and to enable fast access to these messages."]
    pub fdcan_hpms: FDCAN_HPMS,
    #[doc = "0x98 - FDCAN new data 1 register"]
    pub fdcan_ndat1: FDCAN_NDAT1,
    #[doc = "0x9c - FDCAN new data 2 register"]
    pub fdcan_ndat2: FDCAN_NDAT2,
    #[doc = "0xa0 - FDCAN Rx FIFO Configuration Register"]
    pub fdcan_rxf0c: FDCAN_RXF0C,
    #[doc = "0xa4 - FDCAN Rx FIFO 0 Status Register"]
    pub fdcan_rxf0s: FDCAN_RXF0S,
    #[doc = "0xa8 - CAN Rx FIFO 0 Acknowledge Register"]
    pub fdcan_rxf0a: FDCAN_RXF0A,
    #[doc = "0xac - FDCAN Rx buffer configuration register"]
    pub fdcan_rxbc: FDCAN_RXBC,
    #[doc = "0xb0 - FDCAN Rx FIFO 1 configuration register"]
    pub fdcan_rxf1c: FDCAN_RXF1C,
    #[doc = "0xb4 - FDCAN Rx FIFO 1 Status Register"]
    pub fdcan_rxf1s: FDCAN_RXF1S,
    #[doc = "0xb8 - FDCAN Rx FIFO 1 Acknowledge Register"]
    pub fdcan_rxf1a: FDCAN_RXF1A,
    #[doc = "0xbc - Configures the number of data bytes belonging to an Rx Buffer / Rx FIFO element. Data field sizes higher than 8 bytes are intended for CAN FD operation only."]
    pub fdcan_rxesc: FDCAN_RXESC,
    #[doc = "0xc0 - FDCAN Tx Buffer Configuration Register"]
    pub fdcan_txbc: FDCAN_TXBC,
    #[doc = "0xc4 - The Tx FIFO/Queue status is related to the pending Tx requests listed in register TXBRP. Therefore the effect of Add/Cancellation requests may be delayed due to a running Tx scan (TXBRP not yet updated)."]
    pub fdcan_txfqs: FDCAN_TXFQS,
    #[doc = "0xc8 - Configures the number of data bytes belonging to a Tx Buffer element. Data field sizes &gt;8 bytes are intended for CAN FD operation only."]
    pub fdcan_txesc: FDCAN_TXESC,
    #[doc = "0xcc - FDCAN Tx Buffer Request Pending Register"]
    pub fdcan_txbrp: FDCAN_TXBRP,
    #[doc = "0xd0 - FDCAN Tx Buffer Add Request Register"]
    pub fdcan_txbar: FDCAN_TXBAR,
    #[doc = "0xd4 - FDCAN Tx Buffer Cancellation Request Register"]
    pub fdcan_txbcr: FDCAN_TXBCR,
    #[doc = "0xd8 - FDCAN Tx Buffer Transmission Occurred Register"]
    pub fdcan_txbto: FDCAN_TXBTO,
    #[doc = "0xdc - FDCAN Tx Buffer Cancellation Finished Register"]
    pub fdcan_txbcf: FDCAN_TXBCF,
    #[doc = "0xe0 - FDCAN Tx Buffer Transmission Interrupt Enable Register"]
    pub fdcan_txbtie: FDCAN_TXBTIE,
    #[doc = "0xe4 - FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register"]
    pub fdcan_txbcie: FDCAN_TXBCIE,
    _reserved43: [u8; 8usize],
    #[doc = "0xf0 - FDCAN Tx event FIFO configuration register"]
    pub fdcan_txefc: FDCAN_TXEFC,
    #[doc = "0xf4 - FDCAN Tx Event FIFO Status Register"]
    pub fdcan_txefs: FDCAN_TXEFS,
    #[doc = "0xf8 - FDCAN Tx Event FIFO Acknowledge Register"]
    pub fdcan_txefa: FDCAN_TXEFA,
    _reserved46: [u8; 4usize],
    #[doc = "0x100 - FDCAN TT trigger memory configuration register"]
    pub fdcan_tttmc: FDCAN_TTTMC,
    #[doc = "0x104 - FDCAN TT reference message configuration register"]
    pub fdcan_ttrmc: FDCAN_TTRMC,
    #[doc = "0x108 - FDCAN TT operation configuration register"]
    pub fdcan_ttocf: FDCAN_TTOCF,
    #[doc = "0x10c - FDCAN TT matrix limits register"]
    pub fdcan_ttmlm: FDCAN_TTMLM,
    #[doc = "0x110 - FDCAN TUR configuration register"]
    pub fdcan_turcf: FDCAN_TURCF,
    #[doc = "0x114 - FDCAN TT operation control register"]
    pub fdcan_ttocn: FDCAN_TTOCN,
    #[doc = "0x118 - FDCAN TT global time preset register"]
    pub fdcan_ttgtp: FDCAN_TTGTP,
    #[doc = "0x11c - FDCAN TT time mark register"]
    pub fdcan_tttmk: FDCAN_TTTMK,
    #[doc = "0x120 - FDCAN TT Interrupt register"]
    pub fdcan_ttir: FDCAN_TTIR,
    #[doc = "0x124 - FDCAN TT interrupt enable register"]
    pub fdcan_ttie: FDCAN_TTIE,
    #[doc = "0x128 - FDCAN TT interrupt line select register"]
    pub fdcan_ttils: FDCAN_TTILS,
    #[doc = "0x12c - FDCAN TT Operation Status Register"]
    pub fdcan_ttost: FDCAN_TTOST,
    #[doc = "0x130 - FDCAN TUR Numerator Actual Register"]
    pub fdcan_turna: FDCAN_TURNA,
    #[doc = "0x134 - FDCAN TT Local and Global Time Register"]
    pub fdcan_ttlgt: FDCAN_TTLGT,
    #[doc = "0x138 - FDCAN TT Cycle Time and Count Register"]
    pub fdcan_ttctc: FDCAN_TTCTC,
    #[doc = "0x13c - FDCAN TT Capture Time Register"]
    pub fdcan_ttcpt: FDCAN_TTCPT,
    #[doc = "0x140 - FDCAN TT Cycle Sync Mark Register"]
    pub fdcan_ttcsm: FDCAN_TTCSM,
    _reserved63: [u8; 444usize],
    #[doc = "0x300 - FDCAN TT Trigger Select Register"]
    pub fdcan_ttts: FDCAN_TTTS,
}
#[doc = "FDCAN Core Release Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_crel](fdcan_crel) module"]
pub type FDCAN_CREL = crate::Reg<u32, _FDCAN_CREL>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_CREL;
#[doc = "`read()` method returns [fdcan_crel::R](fdcan_crel::R) reader structure"]
impl crate::Readable for FDCAN_CREL {}
#[doc = "FDCAN Core Release Register"]
pub mod fdcan_crel;
#[doc = "FDCAN Core Release Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_endn](fdcan_endn) module"]
pub type FDCAN_ENDN = crate::Reg<u32, _FDCAN_ENDN>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_ENDN;
#[doc = "`read()` method returns [fdcan_endn::R](fdcan_endn::R) reader structure"]
impl crate::Readable for FDCAN_ENDN {}
#[doc = "FDCAN Core Release Register"]
pub mod fdcan_endn;
#[doc = "This register is only writable if bits CCCR.CCE and CCCR.INIT are set. The CAN bit time may be programed in the range of 4 to 25 time quanta. The CAN time quantum may be programmed in the range of 1 to 1024 FDCAN clock periods. tq = (DBRP + 1) FDCAN clock period. DTSEG1 is the sum of Prop_Seg and Phase_Seg1. DTSEG2 is Phase_Seg2. Therefore the length of the bit time is (programmed values) \\[DTSEG1 + DTSEG2 + 3\\]
tq or (functional values) \\[Sync_Seg + Prop_Seg + Phase_Seg1 + Phase_Seg2\\]
tq. The Information Processing Time (IPT) is zero, meaning the data for the next bit is available at the first clock edge after the sample point.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_dbtp](fdcan_dbtp) module"]
pub type FDCAN_DBTP = crate::Reg<u32, _FDCAN_DBTP>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_DBTP;
#[doc = "`read()` method returns [fdcan_dbtp::R](fdcan_dbtp::R) reader structure"]
impl crate::Readable for FDCAN_DBTP {}
#[doc = "`write(|w| ..)` method takes [fdcan_dbtp::W](fdcan_dbtp::W) writer structure"]
impl crate::Writable for FDCAN_DBTP {}
#[doc = "This register is only writable if bits CCCR.CCE and CCCR.INIT are set. The CAN bit time may be programed in the range of 4 to 25 time quanta. The CAN time quantum may be programmed in the range of 1 to 1024 FDCAN clock periods. tq = (DBRP + 1) FDCAN clock period. DTSEG1 is the sum of Prop_Seg and Phase_Seg1. DTSEG2 is Phase_Seg2. Therefore the length of the bit time is (programmed values) \\[DTSEG1 + DTSEG2 + 3\\]
tq or (functional values) \\[Sync_Seg + Prop_Seg + Phase_Seg1 + Phase_Seg2\\]
tq. The Information Processing Time (IPT) is zero, meaning the data for the next bit is available at the first clock edge after the sample point."]
pub mod fdcan_dbtp;
#[doc = "Write access to the Test Register has to be enabled by setting bit CCCR\\[TEST\\]
to 1 . All Test Register functions are set to their reset values when bit CCCR\\[TEST\\]
is reset. Loop Back mode and software control of Tx pin FDCANx_TX are hardware test modes. Programming TX differently from 00 may disturb the message transfer on the CAN bus.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_test](fdcan_test) module"]
pub type FDCAN_TEST = crate::Reg<u32, _FDCAN_TEST>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TEST;
#[doc = "`read()` method returns [fdcan_test::R](fdcan_test::R) reader structure"]
impl crate::Readable for FDCAN_TEST {}
#[doc = "`write(|w| ..)` method takes [fdcan_test::W](fdcan_test::W) writer structure"]
impl crate::Writable for FDCAN_TEST {}
#[doc = "Write access to the Test Register has to be enabled by setting bit CCCR\\[TEST\\]
to 1 . All Test Register functions are set to their reset values when bit CCCR\\[TEST\\]
is reset. Loop Back mode and software control of Tx pin FDCANx_TX are hardware test modes. Programming TX differently from 00 may disturb the message transfer on the CAN bus."]
pub mod fdcan_test;
#[doc = "The RAM Watchdog monitors the READY output of the Message RAM. A Message RAM access starts the Message RAM Watchdog Counter with the value configured by the RWD\\[WDC\\]
bits. The counter is reloaded with RWD\\[WDC\\]
bits when the Message RAM signals successful completion by activating its READY output. In case there is no response from the Message RAM until the counter has counted down to 0, the counter stops and interrupt flag IR\\[WDI\\]
bit is set. The RAM Watchdog Counter is clocked by the fdcan_pclk clock.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rwd](fdcan_rwd) module"]
pub type FDCAN_RWD = crate::Reg<u32, _FDCAN_RWD>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RWD;
#[doc = "`read()` method returns [fdcan_rwd::R](fdcan_rwd::R) reader structure"]
impl crate::Readable for FDCAN_RWD {}
#[doc = "`write(|w| ..)` method takes [fdcan_rwd::W](fdcan_rwd::W) writer structure"]
impl crate::Writable for FDCAN_RWD {}
#[doc = "The RAM Watchdog monitors the READY output of the Message RAM. A Message RAM access starts the Message RAM Watchdog Counter with the value configured by the RWD\\[WDC\\]
bits. The counter is reloaded with RWD\\[WDC\\]
bits when the Message RAM signals successful completion by activating its READY output. In case there is no response from the Message RAM until the counter has counted down to 0, the counter stops and interrupt flag IR\\[WDI\\]
bit is set. The RAM Watchdog Counter is clocked by the fdcan_pclk clock."]
pub mod fdcan_rwd;
#[doc = "For details about setting and resetting of single bits see Software initialization.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_cccr](fdcan_cccr) module"]
pub type FDCAN_CCCR = crate::Reg<u32, _FDCAN_CCCR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_CCCR;
#[doc = "`read()` method returns [fdcan_cccr::R](fdcan_cccr::R) reader structure"]
impl crate::Readable for FDCAN_CCCR {}
#[doc = "`write(|w| ..)` method takes [fdcan_cccr::W](fdcan_cccr::W) writer structure"]
impl crate::Writable for FDCAN_CCCR {}
#[doc = "For details about setting and resetting of single bits see Software initialization."]
pub mod fdcan_cccr;
#[doc = "FDCAN_NBTP\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_nbtp](fdcan_nbtp) module"]
pub type FDCAN_NBTP = crate::Reg<u32, _FDCAN_NBTP>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_NBTP;
#[doc = "`read()` method returns [fdcan_nbtp::R](fdcan_nbtp::R) reader structure"]
impl crate::Readable for FDCAN_NBTP {}
#[doc = "`write(|w| ..)` method takes [fdcan_nbtp::W](fdcan_nbtp::W) writer structure"]
impl crate::Writable for FDCAN_NBTP {}
#[doc = "FDCAN_NBTP"]
pub mod fdcan_nbtp;
#[doc = "FDCAN Timestamp Counter Configuration Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tscc](fdcan_tscc) module"]
pub type FDCAN_TSCC = crate::Reg<u32, _FDCAN_TSCC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TSCC;
#[doc = "`read()` method returns [fdcan_tscc::R](fdcan_tscc::R) reader structure"]
impl crate::Readable for FDCAN_TSCC {}
#[doc = "`write(|w| ..)` method takes [fdcan_tscc::W](fdcan_tscc::W) writer structure"]
impl crate::Writable for FDCAN_TSCC {}
#[doc = "FDCAN Timestamp Counter Configuration Register"]
pub mod fdcan_tscc;
#[doc = "FDCAN Timestamp Counter Value Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tscv](fdcan_tscv) module"]
pub type FDCAN_TSCV = crate::Reg<u32, _FDCAN_TSCV>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TSCV;
#[doc = "`read()` method returns [fdcan_tscv::R](fdcan_tscv::R) reader structure"]
impl crate::Readable for FDCAN_TSCV {}
#[doc = "FDCAN Timestamp Counter Value Register"]
pub mod fdcan_tscv;
#[doc = "FDCAN Timeout Counter Configuration Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tocc](fdcan_tocc) module"]
pub type FDCAN_TOCC = crate::Reg<u32, _FDCAN_TOCC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TOCC;
#[doc = "`read()` method returns [fdcan_tocc::R](fdcan_tocc::R) reader structure"]
impl crate::Readable for FDCAN_TOCC {}
#[doc = "`write(|w| ..)` method takes [fdcan_tocc::W](fdcan_tocc::W) writer structure"]
impl crate::Writable for FDCAN_TOCC {}
#[doc = "FDCAN Timeout Counter Configuration Register"]
pub mod fdcan_tocc;
#[doc = "FDCAN Timeout Counter Value Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tocv](fdcan_tocv) module"]
pub type FDCAN_TOCV = crate::Reg<u32, _FDCAN_TOCV>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TOCV;
#[doc = "`read()` method returns [fdcan_tocv::R](fdcan_tocv::R) reader structure"]
impl crate::Readable for FDCAN_TOCV {}
#[doc = "FDCAN Timeout Counter Value Register"]
pub mod fdcan_tocv;
#[doc = "FDCAN Error Counter Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ecr](fdcan_ecr) module"]
pub type FDCAN_ECR = crate::Reg<u32, _FDCAN_ECR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_ECR;
#[doc = "`read()` method returns [fdcan_ecr::R](fdcan_ecr::R) reader structure"]
impl crate::Readable for FDCAN_ECR {}
#[doc = "FDCAN Error Counter Register"]
pub mod fdcan_ecr;
#[doc = "FDCAN Protocol Status Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_psr](fdcan_psr) module"]
pub type FDCAN_PSR = crate::Reg<u32, _FDCAN_PSR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_PSR;
#[doc = "`read()` method returns [fdcan_psr::R](fdcan_psr::R) reader structure"]
impl crate::Readable for FDCAN_PSR {}
#[doc = "`write(|w| ..)` method takes [fdcan_psr::W](fdcan_psr::W) writer structure"]
impl crate::Writable for FDCAN_PSR {}
#[doc = "FDCAN Protocol Status Register"]
pub mod fdcan_psr;
#[doc = "FDCAN Transmitter Delay Compensation Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tdcr](fdcan_tdcr) module"]
pub type FDCAN_TDCR = crate::Reg<u32, _FDCAN_TDCR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TDCR;
#[doc = "`read()` method returns [fdcan_tdcr::R](fdcan_tdcr::R) reader structure"]
impl crate::Readable for FDCAN_TDCR {}
#[doc = "FDCAN Transmitter Delay Compensation Register"]
pub mod fdcan_tdcr;
#[doc = "The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of IE controls whether an interrupt is generated. The configuration of ILS controls on which interrupt line an interrupt is signaled.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ir](fdcan_ir) module"]
pub type FDCAN_IR = crate::Reg<u32, _FDCAN_IR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_IR;
#[doc = "`read()` method returns [fdcan_ir::R](fdcan_ir::R) reader structure"]
impl crate::Readable for FDCAN_IR {}
#[doc = "`write(|w| ..)` method takes [fdcan_ir::W](fdcan_ir::W) writer structure"]
impl crate::Writable for FDCAN_IR {}
#[doc = "The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of IE controls whether an interrupt is generated. The configuration of ILS controls on which interrupt line an interrupt is signaled."]
pub mod fdcan_ir;
#[doc = "The settings in the Interrupt Enable register determine which status changes in the Interrupt Register will be signaled on an interrupt line.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ie](fdcan_ie) module"]
pub type FDCAN_IE = crate::Reg<u32, _FDCAN_IE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_IE;
#[doc = "`read()` method returns [fdcan_ie::R](fdcan_ie::R) reader structure"]
impl crate::Readable for FDCAN_IE {}
#[doc = "`write(|w| ..)` method takes [fdcan_ie::W](fdcan_ie::W) writer structure"]
impl crate::Writable for FDCAN_IE {}
#[doc = "The settings in the Interrupt Enable register determine which status changes in the Interrupt Register will be signaled on an interrupt line."]
pub mod fdcan_ie;
#[doc = "The Interrupt Line Select register assigns an interrupt generated by a specific interrupt flag from the Interrupt Register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via ILE\\[EINT0\\]
and ILE\\[EINT1\\].\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ils](fdcan_ils) module"]
pub type FDCAN_ILS = crate::Reg<u32, _FDCAN_ILS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_ILS;
#[doc = "`read()` method returns [fdcan_ils::R](fdcan_ils::R) reader structure"]
impl crate::Readable for FDCAN_ILS {}
#[doc = "`write(|w| ..)` method takes [fdcan_ils::W](fdcan_ils::W) writer structure"]
impl crate::Writable for FDCAN_ILS {}
#[doc = "The Interrupt Line Select register assigns an interrupt generated by a specific interrupt flag from the Interrupt Register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via ILE\\[EINT0\\]
and ILE\\[EINT1\\]."]
pub mod fdcan_ils;
#[doc = "Each of the two interrupt lines to the CPU can be enabled/disabled separately by programming bits EINT0 and EINT1.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ile](fdcan_ile) module"]
pub type FDCAN_ILE = crate::Reg<u32, _FDCAN_ILE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_ILE;
#[doc = "`read()` method returns [fdcan_ile::R](fdcan_ile::R) reader structure"]
impl crate::Readable for FDCAN_ILE {}
#[doc = "`write(|w| ..)` method takes [fdcan_ile::W](fdcan_ile::W) writer structure"]
impl crate::Writable for FDCAN_ILE {}
#[doc = "Each of the two interrupt lines to the CPU can be enabled/disabled separately by programming bits EINT0 and EINT1."]
pub mod fdcan_ile;
#[doc = "Global settings for Message ID filtering. The Global Filter Configuration controls the filter path for standard and extended messages as described in Figure706: Standard Message ID filter path and Figure707: Extended Message ID filter path.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_gfc](fdcan_gfc) module"]
pub type FDCAN_GFC = crate::Reg<u32, _FDCAN_GFC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_GFC;
#[doc = "`read()` method returns [fdcan_gfc::R](fdcan_gfc::R) reader structure"]
impl crate::Readable for FDCAN_GFC {}
#[doc = "`write(|w| ..)` method takes [fdcan_gfc::W](fdcan_gfc::W) writer structure"]
impl crate::Writable for FDCAN_GFC {}
#[doc = "Global settings for Message ID filtering. The Global Filter Configuration controls the filter path for standard and extended messages as described in Figure706: Standard Message ID filter path and Figure707: Extended Message ID filter path."]
pub mod fdcan_gfc;
#[doc = "Settings for 11-bit standard Message ID filtering.The Standard ID Filter Configuration controls the filter path for standard messages as described in Figure706: Standard Message ID filter path.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_sidfc](fdcan_sidfc) module"]
pub type FDCAN_SIDFC = crate::Reg<u32, _FDCAN_SIDFC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_SIDFC;
#[doc = "`read()` method returns [fdcan_sidfc::R](fdcan_sidfc::R) reader structure"]
impl crate::Readable for FDCAN_SIDFC {}
#[doc = "`write(|w| ..)` method takes [fdcan_sidfc::W](fdcan_sidfc::W) writer structure"]
impl crate::Writable for FDCAN_SIDFC {}
#[doc = "Settings for 11-bit standard Message ID filtering.The Standard ID Filter Configuration controls the filter path for standard messages as described in Figure706: Standard Message ID filter path."]
pub mod fdcan_sidfc;
#[doc = "Settings for 29-bit extended Message ID filtering. The Extended ID Filter Configuration controls the filter path for standard messages as described in Figure707: Extended Message ID filter path.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_xidfc](fdcan_xidfc) module"]
pub type FDCAN_XIDFC = crate::Reg<u32, _FDCAN_XIDFC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_XIDFC;
#[doc = "`read()` method returns [fdcan_xidfc::R](fdcan_xidfc::R) reader structure"]
impl crate::Readable for FDCAN_XIDFC {}
#[doc = "`write(|w| ..)` method takes [fdcan_xidfc::W](fdcan_xidfc::W) writer structure"]
impl crate::Writable for FDCAN_XIDFC {}
#[doc = "Settings for 29-bit extended Message ID filtering. The Extended ID Filter Configuration controls the filter path for standard messages as described in Figure707: Extended Message ID filter path."]
pub mod fdcan_xidfc;
#[doc = "FDCAN Extended ID and Mask Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_xidam](fdcan_xidam) module"]
pub type FDCAN_XIDAM = crate::Reg<u32, _FDCAN_XIDAM>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_XIDAM;
#[doc = "`read()` method returns [fdcan_xidam::R](fdcan_xidam::R) reader structure"]
impl crate::Readable for FDCAN_XIDAM {}
#[doc = "`write(|w| ..)` method takes [fdcan_xidam::W](fdcan_xidam::W) writer structure"]
impl crate::Writable for FDCAN_XIDAM {}
#[doc = "FDCAN Extended ID and Mask Register"]
pub mod fdcan_xidam;
#[doc = "This register is updated every time a Message ID filter element configured to generate a priority event match. This can be used to monitor the status of incoming high priority messages and to enable fast access to these messages.\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_hpms](fdcan_hpms) module"]
pub type FDCAN_HPMS = crate::Reg<u32, _FDCAN_HPMS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_HPMS;
#[doc = "`read()` method returns [fdcan_hpms::R](fdcan_hpms::R) reader structure"]
impl crate::Readable for FDCAN_HPMS {}
#[doc = "This register is updated every time a Message ID filter element configured to generate a priority event match. This can be used to monitor the status of incoming high priority messages and to enable fast access to these messages."]
pub mod fdcan_hpms;
#[doc = "FDCAN new data 1 register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ndat1](fdcan_ndat1) module"]
pub type FDCAN_NDAT1 = crate::Reg<u32, _FDCAN_NDAT1>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_NDAT1;
#[doc = "`read()` method returns [fdcan_ndat1::R](fdcan_ndat1::R) reader structure"]
impl crate::Readable for FDCAN_NDAT1 {}
#[doc = "`write(|w| ..)` method takes [fdcan_ndat1::W](fdcan_ndat1::W) writer structure"]
impl crate::Writable for FDCAN_NDAT1 {}
#[doc = "FDCAN new data 1 register"]
pub mod fdcan_ndat1;
#[doc = "FDCAN new data 2 register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ndat2](fdcan_ndat2) module"]
pub type FDCAN_NDAT2 = crate::Reg<u32, _FDCAN_NDAT2>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_NDAT2;
#[doc = "`read()` method returns [fdcan_ndat2::R](fdcan_ndat2::R) reader structure"]
impl crate::Readable for FDCAN_NDAT2 {}
#[doc = "`write(|w| ..)` method takes [fdcan_ndat2::W](fdcan_ndat2::W) writer structure"]
impl crate::Writable for FDCAN_NDAT2 {}
#[doc = "FDCAN new data 2 register"]
pub mod fdcan_ndat2;
#[doc = "FDCAN Rx FIFO Configuration Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf0c](fdcan_rxf0c) module"]
pub type FDCAN_RXF0C = crate::Reg<u32, _FDCAN_RXF0C>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF0C;
#[doc = "`read()` method returns [fdcan_rxf0c::R](fdcan_rxf0c::R) reader structure"]
impl crate::Readable for FDCAN_RXF0C {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxf0c::W](fdcan_rxf0c::W) writer structure"]
impl crate::Writable for FDCAN_RXF0C {}
#[doc = "FDCAN Rx FIFO Configuration Register"]
pub mod fdcan_rxf0c;
#[doc = "FDCAN Rx FIFO 0 Status Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf0s](fdcan_rxf0s) module"]
pub type FDCAN_RXF0S = crate::Reg<u32, _FDCAN_RXF0S>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF0S;
#[doc = "`read()` method returns [fdcan_rxf0s::R](fdcan_rxf0s::R) reader structure"]
impl crate::Readable for FDCAN_RXF0S {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxf0s::W](fdcan_rxf0s::W) writer structure"]
impl crate::Writable for FDCAN_RXF0S {}
#[doc = "FDCAN Rx FIFO 0 Status Register"]
pub mod fdcan_rxf0s;
#[doc = "CAN Rx FIFO 0 Acknowledge Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf0a](fdcan_rxf0a) module"]
pub type FDCAN_RXF0A = crate::Reg<u32, _FDCAN_RXF0A>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF0A;
#[doc = "`read()` method returns [fdcan_rxf0a::R](fdcan_rxf0a::R) reader structure"]
impl crate::Readable for FDCAN_RXF0A {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxf0a::W](fdcan_rxf0a::W) writer structure"]
impl crate::Writable for FDCAN_RXF0A {}
#[doc = "CAN Rx FIFO 0 Acknowledge Register"]
pub mod fdcan_rxf0a;
#[doc = "FDCAN Rx buffer configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxbc](fdcan_rxbc) module"]
pub type FDCAN_RXBC = crate::Reg<u32, _FDCAN_RXBC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXBC;
#[doc = "`read()` method returns [fdcan_rxbc::R](fdcan_rxbc::R) reader structure"]
impl crate::Readable for FDCAN_RXBC {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxbc::W](fdcan_rxbc::W) writer structure"]
impl crate::Writable for FDCAN_RXBC {}
#[doc = "FDCAN Rx buffer configuration register"]
pub mod fdcan_rxbc;
#[doc = "FDCAN Rx FIFO 1 configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf1c](fdcan_rxf1c) module"]
pub type FDCAN_RXF1C = crate::Reg<u32, _FDCAN_RXF1C>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF1C;
#[doc = "`read()` method returns [fdcan_rxf1c::R](fdcan_rxf1c::R) reader structure"]
impl crate::Readable for FDCAN_RXF1C {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxf1c::W](fdcan_rxf1c::W) writer structure"]
impl crate::Writable for FDCAN_RXF1C {}
#[doc = "FDCAN Rx FIFO 1 configuration register"]
pub mod fdcan_rxf1c;
#[doc = "FDCAN Rx FIFO 1 Status Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf1s](fdcan_rxf1s) module"]
pub type FDCAN_RXF1S = crate::Reg<u32, _FDCAN_RXF1S>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF1S;
#[doc = "`read()` method returns [fdcan_rxf1s::R](fdcan_rxf1s::R) reader structure"]
impl crate::Readable for FDCAN_RXF1S {}
#[doc = "FDCAN Rx FIFO 1 Status Register"]
pub mod fdcan_rxf1s;
#[doc = "FDCAN Rx FIFO 1 Acknowledge Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxf1a](fdcan_rxf1a) module"]
pub type FDCAN_RXF1A = crate::Reg<u32, _FDCAN_RXF1A>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXF1A;
#[doc = "`read()` method returns [fdcan_rxf1a::R](fdcan_rxf1a::R) reader structure"]
impl crate::Readable for FDCAN_RXF1A {}
#[doc = "`write(|w| ..)` method takes [fdcan_rxf1a::W](fdcan_rxf1a::W) writer structure"]
impl crate::Writable for FDCAN_RXF1A {}
#[doc = "FDCAN Rx FIFO 1 Acknowledge Register"]
pub mod fdcan_rxf1a;
#[doc = "Configures the number of data bytes belonging to an Rx Buffer / Rx FIFO element. Data field sizes higher than 8 bytes are intended for CAN FD operation only.\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_rxesc](fdcan_rxesc) module"]
pub type FDCAN_RXESC = crate::Reg<u32, _FDCAN_RXESC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_RXESC;
#[doc = "`read()` method returns [fdcan_rxesc::R](fdcan_rxesc::R) reader structure"]
impl crate::Readable for FDCAN_RXESC {}
#[doc = "Configures the number of data bytes belonging to an Rx Buffer / Rx FIFO element. Data field sizes higher than 8 bytes are intended for CAN FD operation only."]
pub mod fdcan_rxesc;
#[doc = "FDCAN Tx Buffer Configuration Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbc](fdcan_txbc) module"]
pub type FDCAN_TXBC = crate::Reg<u32, _FDCAN_TXBC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBC;
#[doc = "`read()` method returns [fdcan_txbc::R](fdcan_txbc::R) reader structure"]
impl crate::Readable for FDCAN_TXBC {}
#[doc = "`write(|w| ..)` method takes [fdcan_txbc::W](fdcan_txbc::W) writer structure"]
impl crate::Writable for FDCAN_TXBC {}
#[doc = "FDCAN Tx Buffer Configuration Register"]
pub mod fdcan_txbc;
#[doc = "The Tx FIFO/Queue status is related to the pending Tx requests listed in register TXBRP. Therefore the effect of Add/Cancellation requests may be delayed due to a running Tx scan (TXBRP not yet updated).\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txfqs](fdcan_txfqs) module"]
pub type FDCAN_TXFQS = crate::Reg<u32, _FDCAN_TXFQS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXFQS;
#[doc = "`read()` method returns [fdcan_txfqs::R](fdcan_txfqs::R) reader structure"]
impl crate::Readable for FDCAN_TXFQS {}
#[doc = "The Tx FIFO/Queue status is related to the pending Tx requests listed in register TXBRP. Therefore the effect of Add/Cancellation requests may be delayed due to a running Tx scan (TXBRP not yet updated)."]
pub mod fdcan_txfqs;
#[doc = "Configures the number of data bytes belonging to a Tx Buffer element. Data field sizes &gt;8 bytes are intended for CAN FD operation only.\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txesc](fdcan_txesc) module"]
pub type FDCAN_TXESC = crate::Reg<u32, _FDCAN_TXESC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXESC;
#[doc = "`read()` method returns [fdcan_txesc::R](fdcan_txesc::R) reader structure"]
impl crate::Readable for FDCAN_TXESC {}
#[doc = "Configures the number of data bytes belonging to a Tx Buffer element. Data field sizes &gt;8 bytes are intended for CAN FD operation only."]
pub mod fdcan_txesc;
#[doc = "FDCAN Tx Buffer Request Pending Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbrp](fdcan_txbrp) module"]
pub type FDCAN_TXBRP = crate::Reg<u32, _FDCAN_TXBRP>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBRP;
#[doc = "`read()` method returns [fdcan_txbrp::R](fdcan_txbrp::R) reader structure"]
impl crate::Readable for FDCAN_TXBRP {}
#[doc = "FDCAN Tx Buffer Request Pending Register"]
pub mod fdcan_txbrp;
#[doc = "FDCAN Tx Buffer Add Request Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbar](fdcan_txbar) module"]
pub type FDCAN_TXBAR = crate::Reg<u32, _FDCAN_TXBAR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBAR;
#[doc = "`read()` method returns [fdcan_txbar::R](fdcan_txbar::R) reader structure"]
impl crate::Readable for FDCAN_TXBAR {}
#[doc = "`write(|w| ..)` method takes [fdcan_txbar::W](fdcan_txbar::W) writer structure"]
impl crate::Writable for FDCAN_TXBAR {}
#[doc = "FDCAN Tx Buffer Add Request Register"]
pub mod fdcan_txbar;
#[doc = "FDCAN Tx Buffer Cancellation Request Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbcr](fdcan_txbcr) module"]
pub type FDCAN_TXBCR = crate::Reg<u32, _FDCAN_TXBCR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBCR;
#[doc = "`read()` method returns [fdcan_txbcr::R](fdcan_txbcr::R) reader structure"]
impl crate::Readable for FDCAN_TXBCR {}
#[doc = "`write(|w| ..)` method takes [fdcan_txbcr::W](fdcan_txbcr::W) writer structure"]
impl crate::Writable for FDCAN_TXBCR {}
#[doc = "FDCAN Tx Buffer Cancellation Request Register"]
pub mod fdcan_txbcr;
#[doc = "FDCAN Tx Buffer Transmission Occurred Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbto](fdcan_txbto) module"]
pub type FDCAN_TXBTO = crate::Reg<u32, _FDCAN_TXBTO>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBTO;
#[doc = "`read()` method returns [fdcan_txbto::R](fdcan_txbto::R) reader structure"]
impl crate::Readable for FDCAN_TXBTO {}
#[doc = "FDCAN Tx Buffer Transmission Occurred Register"]
pub mod fdcan_txbto;
#[doc = "FDCAN Tx Buffer Cancellation Finished Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbcf](fdcan_txbcf) module"]
pub type FDCAN_TXBCF = crate::Reg<u32, _FDCAN_TXBCF>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBCF;
#[doc = "`read()` method returns [fdcan_txbcf::R](fdcan_txbcf::R) reader structure"]
impl crate::Readable for FDCAN_TXBCF {}
#[doc = "FDCAN Tx Buffer Cancellation Finished Register"]
pub mod fdcan_txbcf;
#[doc = "FDCAN Tx Buffer Transmission Interrupt Enable Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbtie](fdcan_txbtie) module"]
pub type FDCAN_TXBTIE = crate::Reg<u32, _FDCAN_TXBTIE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBTIE;
#[doc = "`read()` method returns [fdcan_txbtie::R](fdcan_txbtie::R) reader structure"]
impl crate::Readable for FDCAN_TXBTIE {}
#[doc = "`write(|w| ..)` method takes [fdcan_txbtie::W](fdcan_txbtie::W) writer structure"]
impl crate::Writable for FDCAN_TXBTIE {}
#[doc = "FDCAN Tx Buffer Transmission Interrupt Enable Register"]
pub mod fdcan_txbtie;
#[doc = "FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txbcie](fdcan_txbcie) module"]
pub type FDCAN_TXBCIE = crate::Reg<u32, _FDCAN_TXBCIE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXBCIE;
#[doc = "`read()` method returns [fdcan_txbcie::R](fdcan_txbcie::R) reader structure"]
impl crate::Readable for FDCAN_TXBCIE {}
#[doc = "`write(|w| ..)` method takes [fdcan_txbcie::W](fdcan_txbcie::W) writer structure"]
impl crate::Writable for FDCAN_TXBCIE {}
#[doc = "FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register"]
pub mod fdcan_txbcie;
#[doc = "FDCAN Tx event FIFO configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txefc](fdcan_txefc) module"]
pub type FDCAN_TXEFC = crate::Reg<u32, _FDCAN_TXEFC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXEFC;
#[doc = "`read()` method returns [fdcan_txefc::R](fdcan_txefc::R) reader structure"]
impl crate::Readable for FDCAN_TXEFC {}
#[doc = "`write(|w| ..)` method takes [fdcan_txefc::W](fdcan_txefc::W) writer structure"]
impl crate::Writable for FDCAN_TXEFC {}
#[doc = "FDCAN Tx event FIFO configuration register"]
pub mod fdcan_txefc;
#[doc = "FDCAN Tx Event FIFO Status Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txefs](fdcan_txefs) module"]
pub type FDCAN_TXEFS = crate::Reg<u32, _FDCAN_TXEFS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXEFS;
#[doc = "`read()` method returns [fdcan_txefs::R](fdcan_txefs::R) reader structure"]
impl crate::Readable for FDCAN_TXEFS {}
#[doc = "FDCAN Tx Event FIFO Status Register"]
pub mod fdcan_txefs;
#[doc = "FDCAN Tx Event FIFO Acknowledge Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_txefa](fdcan_txefa) module"]
pub type FDCAN_TXEFA = crate::Reg<u32, _FDCAN_TXEFA>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TXEFA;
#[doc = "`read()` method returns [fdcan_txefa::R](fdcan_txefa::R) reader structure"]
impl crate::Readable for FDCAN_TXEFA {}
#[doc = "`write(|w| ..)` method takes [fdcan_txefa::W](fdcan_txefa::W) writer structure"]
impl crate::Writable for FDCAN_TXEFA {}
#[doc = "FDCAN Tx Event FIFO Acknowledge Register"]
pub mod fdcan_txefa;
#[doc = "FDCAN TT trigger memory configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tttmc](fdcan_tttmc) module"]
pub type FDCAN_TTTMC = crate::Reg<u32, _FDCAN_TTTMC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTTMC;
#[doc = "`read()` method returns [fdcan_tttmc::R](fdcan_tttmc::R) reader structure"]
impl crate::Readable for FDCAN_TTTMC {}
#[doc = "`write(|w| ..)` method takes [fdcan_tttmc::W](fdcan_tttmc::W) writer structure"]
impl crate::Writable for FDCAN_TTTMC {}
#[doc = "FDCAN TT trigger memory configuration register"]
pub mod fdcan_tttmc;
#[doc = "FDCAN TT reference message configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttrmc](fdcan_ttrmc) module"]
pub type FDCAN_TTRMC = crate::Reg<u32, _FDCAN_TTRMC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTRMC;
#[doc = "`read()` method returns [fdcan_ttrmc::R](fdcan_ttrmc::R) reader structure"]
impl crate::Readable for FDCAN_TTRMC {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttrmc::W](fdcan_ttrmc::W) writer structure"]
impl crate::Writable for FDCAN_TTRMC {}
#[doc = "FDCAN TT reference message configuration register"]
pub mod fdcan_ttrmc;
#[doc = "FDCAN TT operation configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttocf](fdcan_ttocf) module"]
pub type FDCAN_TTOCF = crate::Reg<u32, _FDCAN_TTOCF>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTOCF;
#[doc = "`read()` method returns [fdcan_ttocf::R](fdcan_ttocf::R) reader structure"]
impl crate::Readable for FDCAN_TTOCF {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttocf::W](fdcan_ttocf::W) writer structure"]
impl crate::Writable for FDCAN_TTOCF {}
#[doc = "FDCAN TT operation configuration register"]
pub mod fdcan_ttocf;
#[doc = "FDCAN TT matrix limits register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttmlm](fdcan_ttmlm) module"]
pub type FDCAN_TTMLM = crate::Reg<u32, _FDCAN_TTMLM>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTMLM;
#[doc = "`read()` method returns [fdcan_ttmlm::R](fdcan_ttmlm::R) reader structure"]
impl crate::Readable for FDCAN_TTMLM {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttmlm::W](fdcan_ttmlm::W) writer structure"]
impl crate::Writable for FDCAN_TTMLM {}
#[doc = "FDCAN TT matrix limits register"]
pub mod fdcan_ttmlm;
#[doc = "FDCAN TUR configuration register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_turcf](fdcan_turcf) module"]
pub type FDCAN_TURCF = crate::Reg<u32, _FDCAN_TURCF>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TURCF;
#[doc = "`read()` method returns [fdcan_turcf::R](fdcan_turcf::R) reader structure"]
impl crate::Readable for FDCAN_TURCF {}
#[doc = "`write(|w| ..)` method takes [fdcan_turcf::W](fdcan_turcf::W) writer structure"]
impl crate::Writable for FDCAN_TURCF {}
#[doc = "FDCAN TUR configuration register"]
pub mod fdcan_turcf;
#[doc = "FDCAN TT operation control register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttocn](fdcan_ttocn) module"]
pub type FDCAN_TTOCN = crate::Reg<u32, _FDCAN_TTOCN>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTOCN;
#[doc = "`read()` method returns [fdcan_ttocn::R](fdcan_ttocn::R) reader structure"]
impl crate::Readable for FDCAN_TTOCN {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttocn::W](fdcan_ttocn::W) writer structure"]
impl crate::Writable for FDCAN_TTOCN {}
#[doc = "FDCAN TT operation control register"]
pub mod fdcan_ttocn;
#[doc = "FDCAN TT global time preset register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttgtp](fdcan_ttgtp) module"]
pub type FDCAN_TTGTP = crate::Reg<u32, _FDCAN_TTGTP>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTGTP;
#[doc = "`read()` method returns [fdcan_ttgtp::R](fdcan_ttgtp::R) reader structure"]
impl crate::Readable for FDCAN_TTGTP {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttgtp::W](fdcan_ttgtp::W) writer structure"]
impl crate::Writable for FDCAN_TTGTP {}
#[doc = "FDCAN TT global time preset register"]
pub mod fdcan_ttgtp;
#[doc = "FDCAN TT time mark register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_tttmk](fdcan_tttmk) module"]
pub type FDCAN_TTTMK = crate::Reg<u32, _FDCAN_TTTMK>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTTMK;
#[doc = "`read()` method returns [fdcan_tttmk::R](fdcan_tttmk::R) reader structure"]
impl crate::Readable for FDCAN_TTTMK {}
#[doc = "`write(|w| ..)` method takes [fdcan_tttmk::W](fdcan_tttmk::W) writer structure"]
impl crate::Writable for FDCAN_TTTMK {}
#[doc = "FDCAN TT time mark register"]
pub mod fdcan_tttmk;
#[doc = "FDCAN TT Interrupt register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttir](fdcan_ttir) module"]
pub type FDCAN_TTIR = crate::Reg<u32, _FDCAN_TTIR>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTIR;
#[doc = "`read()` method returns [fdcan_ttir::R](fdcan_ttir::R) reader structure"]
impl crate::Readable for FDCAN_TTIR {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttir::W](fdcan_ttir::W) writer structure"]
impl crate::Writable for FDCAN_TTIR {}
#[doc = "FDCAN TT Interrupt register"]
pub mod fdcan_ttir;
#[doc = "FDCAN TT interrupt enable register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttie](fdcan_ttie) module"]
pub type FDCAN_TTIE = crate::Reg<u32, _FDCAN_TTIE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTIE;
#[doc = "`read()` method returns [fdcan_ttie::R](fdcan_ttie::R) reader structure"]
impl crate::Readable for FDCAN_TTIE {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttie::W](fdcan_ttie::W) writer structure"]
impl crate::Writable for FDCAN_TTIE {}
#[doc = "FDCAN TT interrupt enable register"]
pub mod fdcan_ttie;
#[doc = "FDCAN TT interrupt line select register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttils](fdcan_ttils) module"]
pub type FDCAN_TTILS = crate::Reg<u32, _FDCAN_TTILS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTILS;
#[doc = "`read()` method returns [fdcan_ttils::R](fdcan_ttils::R) reader structure"]
impl crate::Readable for FDCAN_TTILS {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttils::W](fdcan_ttils::W) writer structure"]
impl crate::Writable for FDCAN_TTILS {}
#[doc = "FDCAN TT interrupt line select register"]
pub mod fdcan_ttils;
#[doc = "FDCAN TT Operation Status Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttost](fdcan_ttost) module"]
pub type FDCAN_TTOST = crate::Reg<u32, _FDCAN_TTOST>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTOST;
#[doc = "`read()` method returns [fdcan_ttost::R](fdcan_ttost::R) reader structure"]
impl crate::Readable for FDCAN_TTOST {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttost::W](fdcan_ttost::W) writer structure"]
impl crate::Writable for FDCAN_TTOST {}
#[doc = "FDCAN TT Operation Status Register"]
pub mod fdcan_ttost;
#[doc = "FDCAN TUR Numerator Actual Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_turna](fdcan_turna) module"]
pub type FDCAN_TURNA = crate::Reg<u32, _FDCAN_TURNA>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TURNA;
#[doc = "`read()` method returns [fdcan_turna::R](fdcan_turna::R) reader structure"]
impl crate::Readable for FDCAN_TURNA {}
#[doc = "FDCAN TUR Numerator Actual Register"]
pub mod fdcan_turna;
#[doc = "FDCAN TT Local and Global Time Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttlgt](fdcan_ttlgt) module"]
pub type FDCAN_TTLGT = crate::Reg<u32, _FDCAN_TTLGT>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTLGT;
#[doc = "`read()` method returns [fdcan_ttlgt::R](fdcan_ttlgt::R) reader structure"]
impl crate::Readable for FDCAN_TTLGT {}
#[doc = "FDCAN TT Local and Global Time Register"]
pub mod fdcan_ttlgt;
#[doc = "FDCAN TT Cycle Time and Count Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttctc](fdcan_ttctc) module"]
pub type FDCAN_TTCTC = crate::Reg<u32, _FDCAN_TTCTC>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTCTC;
#[doc = "`read()` method returns [fdcan_ttctc::R](fdcan_ttctc::R) reader structure"]
impl crate::Readable for FDCAN_TTCTC {}
#[doc = "FDCAN TT Cycle Time and Count Register"]
pub mod fdcan_ttctc;
#[doc = "FDCAN TT Capture Time Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttcpt](fdcan_ttcpt) module"]
pub type FDCAN_TTCPT = crate::Reg<u32, _FDCAN_TTCPT>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTCPT;
#[doc = "`read()` method returns [fdcan_ttcpt::R](fdcan_ttcpt::R) reader structure"]
impl crate::Readable for FDCAN_TTCPT {}
#[doc = "FDCAN TT Capture Time Register"]
pub mod fdcan_ttcpt;
#[doc = "FDCAN TT Cycle Sync Mark Register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttcsm](fdcan_ttcsm) module"]
pub type FDCAN_TTCSM = crate::Reg<u32, _FDCAN_TTCSM>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTCSM;
#[doc = "`read()` method returns [fdcan_ttcsm::R](fdcan_ttcsm::R) reader structure"]
impl crate::Readable for FDCAN_TTCSM {}
#[doc = "FDCAN TT Cycle Sync Mark Register"]
pub mod fdcan_ttcsm;
#[doc = "FDCAN TT Trigger Select Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [fdcan_ttts](fdcan_ttts) module"]
pub type FDCAN_TTTS = crate::Reg<u32, _FDCAN_TTTS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _FDCAN_TTTS;
#[doc = "`read()` method returns [fdcan_ttts::R](fdcan_ttts::R) reader structure"]
impl crate::Readable for FDCAN_TTTS {}
#[doc = "`write(|w| ..)` method takes [fdcan_ttts::W](fdcan_ttts::W) writer structure"]
impl crate::Writable for FDCAN_TTTS {}
#[doc = "FDCAN TT Trigger Select Register"]
pub mod fdcan_ttts;
